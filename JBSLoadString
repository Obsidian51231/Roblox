--[[
          ...                               .---:                                                                                             
         .%%%-                             *%%%#*                                                 :===                                        
         .%%%-    .::.  ... ...      ... .=%%%:.. ...     ..     .:.        .:..       .:.  ...  .=%%#..     ..:.      ...  .:                
         .%%%-  =#%%%%%*%%% -%%#    -%%#.*%%%%%%*.%%%.   *%%+ .*%%%%%+   -*%%%%%#=  :*%%%%%*%%%-.%%%%%%%: .+#%%%%%*-  :%%%:#%%:               
         .%%%- *%%#-::=#%%%  =%%*  .#%%: .=%%#....%%%.   *%%+ =%%#      *%%*-::=*=.:%%%=::-*%%%- .=%%#.. :%%%=::-#%%+ :%%%#+--                
         .%%%-.%%%:    :%%%   *%%= *%%-   -%%#   .%%%.   *%%+  +#%%#*- .%%%.       +%%+     #%%-  -%%#   *%%=    .%%%.:%%%:                   
    :=: .=%%%. #%%+   .*%%%    #%%*%%=    -%%#   .%%%-  .#%%+      *%%+ #%%=   :-. =%%#:   -%%%-  -%%#   =%%#.   +%%# :%%%                    
   -%%%%%%%%-  .*%%%##%%%%%    .#%%%+     -%%#    +%%%##%#%%+ =%%#*#%%- .*%%%#%%%*. =%%%##%%%%%-  .#%%%#: =#%%%#%%%+. :%%%                    
     :====:      .-===:.---     =%%*      .---     .-==-.:--:  .-===-      -===-.     :===- ---.    -==-    :-===:    .---                    
                               :%%#.                                                                                                          
                               ===.                                                                                                           
--]]

-- Jayfuscator V1.2.1 --

return(function(a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,u,v,v)local v,w,x,y,z,ba,bb,bc,bd,be,bf,bg,bh,bi,bj,bk,bl,bm,bn,bo,bp,bq,br,bs,bt,bu,bv,bw,bx,by,bz,ca,cb,cc,cd,ce,cf,cg,ch,ci,cj=104,50,64,66,57,45,65,63,36,16,39,16,17,13,22,64,55,73,27,83,95,64,58,76,82,55,99,40,97,57,89,44,56,81,22,76,67,99,74,54,78,26,39,27,24,35,64,43,68,52,81 while v~=81 do if w>=732 then if w>=1042 then if w>=1224 then if w>=1360 then if w>=1393 then if w<1428 then w=1437 do return bq(bz(cd()),{},cd())();end else v=81;end else w=1393 bq=function(v,ck,cl,cm,cm,cm)local cm,cn,co,cp,cq do cn=by end do cm=v[34]end cp=v[6]cq=v[40]co=v[74]return function(...)local v,cn,cr,cs,ct,cu,cv,cw,cx cv=1 cw=-1 cr=-1 cn={}ct={...}do cx=(bi('#',...)-1)end v={}cu={}for cr=0,cx do do if(not(cr<cm))then cn[(cr-cm)]=ct[(cr+1)];else do cu[cr]=ct[(cr+1)];end end;end end;cs=(cx-cm+1)while true do local cr,cs,cy,cz,da,db,dc,dd,de,df dc=cq[cv]cr=dc[s]do da=dc[145]end db=dc[150]dd=dc[138]cz=dc[174]do cy=dc[100]end de=dc[99]cs=dc[19]df=dc[77]if not(cr>45)then if not(dc[134]>22)then if not(dc[134]<11)then if not(cr<17)then if not(cr<20)then if not(cr>20)then cq[cv]=cc[cy];cv=dc[19];else if 21==dc[134]then do by[db]()end else for s=db,cs do cu[s]=nil;end;end end else if not(cr<18)then if(cr<19)then local s,da da=db do s=cu[dc[19]]end cu[(da+1)]=s;cu[da]=s[co[cz]];else do cu[dc[150]][co[cs]]=co[cz];end end else local s,da s=dc[150]da=dc[19]for dg=s,da do cu[dg]=cn[(dg-s)];end;end end else if not(dc[134]>13)then do if not(dc[134]>11)then cu[db]=(cu[dc[19]]%co[cz]);else if(cr<13)then if((cu[db]<cu[cz]))then do cv=cs;end end;else cu[db]=bq(cp[cs],nil,cl);end end end else if not(cr<15)then if(cr>15)then local s s=db do cu[s](ci(cu,(s+1),cs))end else do return cu[dc[99]][cy]end end else do cu[db]=(cu[cs]*cu[cz]);end end end end else if not(cr>4)then if not(cr>1)then if 0==cr then cu[dc[150]]=cu[dc[19]][co[cz]];else while cu[db]do cv=cs;break end end else do if not(dc[134]<3)then if(dc[134]>3)then cl[co[cs]]=cu[db];else local s,cn,da cn=db da=cu[cn]s=cs do for dg=1,s do da[dg]=cu[(cn+dg)]end;end end else local s,cn cn,s=bj(...)for s=1,db do cu[(s-1)]=cn[s]end end end end else if not(cr<8)then if not(dc[134]<9)then if not(cr~=9)then local s,cn,da cn=dc[150]da=cu[(cn+2)]s=(cu[cn]+da)cu[cn]=s;do if((da>0))then do if(not(s>cu[cn+1]))then cv=dc[19];cu[(cn+3)]=s;end end elseif(not(s<cu[cn+1]))then do cv=cs;end cu[(cn+3)]=s;end end else local s s=db do return ci(cu,s,(s+cs))end;end else local s,cn cn=dc[150]s={}if(#v>0)then for da=1,#v do local dg dg=v[da]for da=0,#dg do local dh,di,dj di=dg[da]dj=di[1]dh=di[2]if(dj==cu and dh>=0)then s[dh]=dj[dh]di[1]=s end end end end return ci(cu,cn,cw);end else if not(cr<6)then if(dc[e]>6)then cu[dc[150]]=-cu[cs];else cu[db]=ck[cs];end else cu[db]=cu[cs];end end end end else if not(dc[134]<34)then if not(cr>39)then if not(cr>36)then if not(cr<35)then if not(cr~=35)then else local e,s,cn,da,dg da=db s=cz e=(da+2)do cn={cu[da](cu[da+1],cu[e])}end for dh=1,s do do cu[(e+dh)]=cn[dh]end end dg=cu[(da+3)]if dg then cu[e]=dg else cv=cs;end;end else do cu[db]=(cu[cs]^cu[cz]);end end else if not(cr<38)then if(cr>38)then else cu[db]=co[cs]end else do cu[db]=by[dd]end end end else do if not(dc[134]<43)then if not(dc[134]>43)then cu[db]=cl[co[cs]];else if not(cr~=44)then cv=cs;else by[db]={}end end else if not(cr<41)then if(cr>41)then local e,s e=cs s=cu[e]for cn=(e+1),cz do s=(s..cu[cn]);end;cu[db]=s;else co=by[db](co)end else cu[db]=(cu[dc[19]]/cu[cz]);end end end end else if not(cr>27)then if not(cr<25)then if not(cr>25)then cq[cv]=cc[cy];cv=cs;else do if(dc[134]<27)then cv=((co[db]<cu[dc[174]])and cs or cv)else cu[db]=(cu[cs]%cu[cz]);end end end else if(cr>23)then local e do e=db end do cu[e]=cu[e](ci(cu,e+1,cw));end else cu[db]=cu[cs][cu[cz]];end end else if not(cr<31)then if not(cr>31)then cu[db]=(cu[cs]+cu[dc[174]]);else if(cr<33)then cw=dc[db];else cq[cv]={[19]=2,[174]=3,[134]=cr- -21,[150]=2,[100]=0};cv=(cv-1);end end else do if not(cr<29)then if(cr<30)then cu[db]=(0~=cs);cv=(cv+1);else cu={};for e=0,cx do if(e<cm)then cu[e]=ct[(e+1)];else break end;end;end else by[dc[150]]=cu[dd]end end end end end end else if not(cr>68)then if not(cr>56)then if not(cr>50)then do if not(dc[134]<48)then if not(cr>48)then cu[db]=by[dc[138]]else if(cr>49)then local e,s s=db e=cu[cs]cu[(s+1)]=e;cu[s]=e[cu[cz]];else cu[dc[150]]=cl[co[cs]][co[cz]];end end else if not(cr~=46)then cu[df]=(function()cu[db]=bq(cp[dd],nil,cl);end)else local e,s s=db e={}for cm=1,#v do local cn cn=v[cm]for cm=0,#cn do local ct,cx,da cx=cn[cm]da=cx[1]ct=cx[2]do if(da==cu and ct>=s)then e[ct]=da[ct];cx[1]=e;end;end end;end;end end end else if not(cr>53)then do if not(cr<52)then if(dc[134]>52)then cu[dc[db]]=cu else do cu[db]={};end end else local e,s,cm,cn e=dc[150]s,cm=bj(cu[e](ci(cu,(e+1),cs)))cw=(cm+e-1)cn=0 for cm=e,cw do do cn=(cn+1);end do cu[cm]=s[cn];end end;end end else if not(cr>54)then cu[db]=(cu[cs]*co[cz]);else if(dc[134]<56)then cv=((cu[db]~=cu[cz])and dc[19]or cv)else ck[cs]=cu[db];end end end end else if not(cr<63)then if not(cr>65)then if not(cr>63)then cu[df]();else do if 64==cr then cq[cv]={[134]=cr-53,[100]=0,[174]=3,[150]=5,[19]=1};do cv=(cv-1);end else local e,s e=dc[150]s={}do while(#v>0)do for ck=1,#v do local ck=v[ck]for cm=0,#ck do local ck=ck[cm]local cm=ck[1]local cn=ck[2]if cm==cu and cn>=0 then s[cn]=cm[cn]ck[1]=s end end end break end end return cu[e],cu[(e+1)]end end end else if not(dc[134]>66)then else do if(cr>67)then if(not(cu[db]<cu[cz]))then do cv=cs;end end;else while(cu[dc[150]]~=co[dc[174]])do cv=cs;break end end end end end else if not(cr>59)then do if not(cr>57)then local e e=dc[150]cu[e]=cu[e](cu[e+1]);else do if(cr>58)then cu[db]();else do by[db]=by[dd]end end end end end else do if not(dc[134]<61)then do if not(cr~=61)then cu[db]=m;else local e,m,s,ck s=db e=((cz-1)*50)m=cu[s]ck=cs do for cm=1,ck do do m[(e+cm)]=cu[(s+cm)]end end;end end end else do by=cu end end end end end end else if not(cr>80)then if not(cr<75)then if not(cr>77)then if not(cr>75)then local e e=db do do do return cu[e](ci(cu,(e+1),cs))end end;end else do if(cr<k)then cl=cu[dc[db]]elseif not cu[db]then cv=cs;end end end else if not(cr>78)then cu[db][cu[cs]]=cu[cz];else do if(cr>79)then local e e=cu[de][cy]do cu[de][cy]=(e..cu[cz]);end else cu[db]=(cu[cs]-cu[cz]);end end end end else if not(cr>71)then if not(cr<70)then if(cr>70)then if dc[150]then db=false;do cz=cs;end cv=(cv-1);else cv=(cv+cs+cz);end else if(cu[cz]~=cu[db])then cv=cs;end;end elseif((co[db]<cu[cz]))then cv=cs;end else if not(dc[134]>72)then cu[db]=#cu[cs];else if i==dc[134]then local e,i,k k=dc[150]i={cu[k](cu[k+1])}do e=0 end for m=k,dc[174]do e=(e+1);cu[m]=i[e];end else cu[db]=(cu[cs]+co[cz]);end end end end else if not(dc[134]>86)then if not(cr>83)then if not(cr>81)then local e e=db cu[e]=cu[e](ci(cu,e+1,cs));else if(cr<83)then cu[db]=(cu[cs]/co[cz]);else local e,i,k do k=db end i={cu[k](ci(cu,k+1,cs))}do e=0 end do for m=k,cz do e=(e+1);cu[m]=i[e];end end end end else if not(dc[134]<85)then if(cr<86)then do cu[db]=(not cu[cs]);end else cu[db]=cu[cs]end else cv=((co[db]~=co[cz])and cs or cv)end end else if not(cr>89)then if not(cr<88)then if(cr>88)then local e,i,k k=db e=cu[k]i=cu[(k+2)]if((i>0))then if((e>cu[k+1]))then cv=cs;else cu[(k+3)]=e;end elseif((e<cu[k+1]))then do cv=cs;end else cu[(k+3)]=e;end else do return cu[db]end end else do cu[df]=(function()cu[db]=bq(cp[dd],nil,cl);end)end end else do if not(cr<91)then if(dc[134]>91)then if not cu[cz]then do cu[db]=cu[cz];end cv=dc[19];end;else if((cu[dc[150]]>cu[cz]))then cv=cs;end;end else local e do e={}end if(#v>0)then do for i=1,#v do local k k=v[i]for i=0,#k do local m,s,v v=k[i]do s=v[1]end do m=v[2]end if(s==cu and m>=0)then e[m]=s[m]do v[1]=e end end end end end end return true;end end end end end end end cv=(cv+1);end;end;end end else if w<=1224 then w=1273 do bz=function(e,i)local i,k,m,s,v,ck,cl,cm=81,55,43,49,62,97,96,16,24,61,46,59,54,96,80,83,96,18,44,15,85,36,33,94 while i~=39 do if k<=297 then if k<=180 then if k>=150 then if k>156 then k=209 cl={}else cm={}k=180 end else if k<99 then m,s,v,ck,cl,cm=nil k=101 else k=150 s={}end end else if k>=269 then if k<292 then for cn=1,ce()do local co,cp,cq,cr,cs,ct=76,48,92,51,50,62,33,28,16,12,50,59,58,37,23,55,13,50,46,66,68,12,60,20,38 while co~=39 do if cp<=275 then if cp<=136 then if cp<=69 then if cp>51 then cq={{},nil,nil}cp=100 else cp=69 cq,cr,cs,ct=nil end else if cp<134 then cq[145]=x();cp=136 else cp=159 do cq[126]={};end end end else if cp>=207 then if cp<=207 then ct=ce()cp=249 else if cp>252 then cp=293 cq[181]=cr else cr=bn(cs,1,2)cp=275 end end else if cp>167 then cp=207 do cs=ce()end else cp=183 while x()==1 do for cr=1,x()do cq[126][cr]={x()==0,ce()}end break end end end end else if cp<=382 then if cp<=319 then if cp<313 then do cq[134]=bn(ct,1,11);end cp=319 else cp=354 cq[150]=bn(cs,3,11);end else if cp<380 then cq[19]=bn(ct,12,33);cp=382 else cq[174]=bn(cs,21,29);cp=405 end end else if cp<=436 then if cp<431 then cp=436 cq[100]=bn(cs,12,20);else do cq[99]=-cq[150]end cp=477 end else if cp>=508 then if cp>510 then co=39;else cp=529 do s[cn]=cq;end end else cq[l]=-cq[174]cp=508 end end end end end end k=297 else cl[40]=s;k=313 end else if k<244 then m=ce()k=248 else k=269 for l=(#cc+1),(#cc+m)do local m,s,cn,co,cp=65,34,12,52,88,54,93,83,66,44,41,19,51,47,59,51,20,96,50,73,99,81,46,63 while m~=42 do if s<=221 then if s<=116 then if s>=97 then if s<108 then cp[145]=x();s=116 else s=151 cn=ce()end else if s>40 then s=97 cp={}else cn,co,cp=nil s=80 end end else if s<=180 then if s>160 then do cp[100]=x();end s=195 else co=ce()s=180 end else if s<217 then cp[181]=bn(cn,1,2);s=221 else cp[134]=bn(co,1,11);s=264 end end end else if s<=382 then if s>=333 then if s>336 then cp[19]=bn(co,12,33);s=426 else s=382 do cp[174]=bn(cn,21,29);end end else if s<300 then s=307 cp[150]=bn(cn,3,11);else s=333 cp[138]=bn(cn,12,20);end end else if s>=484 then if s<526 then s=529 do cc[l]=cp;end else break end else if s<466 then s=469 cp[99]=-cp[150]else do cp[77]=-cp[174]end s=484 end end end end end end end end end else if k>=438 then if k<=480 then if k>447 then for l=1,ce()do do cm[l-1]=bz();end end k=510 else k=480 cl[74]=v end else if k>=533 then if k<551 then k=557 return cl;else i=39;end else k=533 do cl[6]=cm;end end end else if k<=342 then if k<338 then cl[34]=x();k=342 else k=390 ck=ce()end else if k<416 then v={}k=420 else do for i=1,ck do local l,m,s,ck=59,31,66,72,62,53,38,63,30,68,82,83,93 while l~=27 do if m<=67 then if m<=31 then m=51 s,ck=nil else if m<64 then m=67 ck=x()else m=91 s=nil end end else if m<=91 then if(not(ck~=1))then s=(not(x()==0));elseif(not(ck~=3))then do s=bg();end elseif(0==ck)then do s=cj();end elseif(not(ck~=4))then s=e[cj()];end;m=116 else if m<149 then m=154 v[i]=s;else break end end end end end end k=438 end end end end end end end else if w<1314 then w=1320 by={}else bd={}w=1360 end end end else if w>=1112 then if w>=1155 then if w>1161 then w=1224 cc={}else bj=function(...)return{...},bi('#',...)end w=1186 end else w=1155 cj=function(e,e)local e,i,k,l=51,56,47,68,12,61,67,71,52,83,94,91,76,77,97 while e~=33 do if i>=179 then if i<=179 then i=194 bb=(bb+l);else if i>200 then e=33;else i=235 return k;end end else if i>=101 then if i>106 then k=be:sub(bb,(bb+l-1))i=179 else l=ce()i=130 end else k,l=nil i=101 end end end end end else if w<1071 then w=1074 do cf=function()local e,i i,e=bk(be,bb,(bb+2))bb=(bb+2);return((e*256)+i);end end else bg=function()local e,i,k,l,m,s,v,ck=66,70,44,84,98,74,50,95,75,24,98,25,25,93,29,16,97 while e~=42 do if i<=218 then if i<=100 then if i<95 then k,l,m,s,v,ck=nil i=100 else k=ce()i=129 end else if i>=169 then if i>174 then ck=((-1)^bh(31,v,1))i=238 else if((k==0 and v==0))then return 0 end i=218 end else do v=ce()end i=169 end end else if i<=277 then if i<=238 then s=bh(20,v,11)i=256 else if i<271 then i=277 m=(bh(0,v,20)*4294967296+k)else l=1 i=324 end end else if i<=324 then i=360 if not(s~=0)then if not(m==0)then s=1 l=j else return(ck*0)end elseif not(s==2047)then else if 0==m then do do return(ck*(0/p))end end else return(ck*(1/c))end end else if i>368 then e=42;else i=401 do return(ck*(2^(s-1023))*(m/cb+l))end end end end end end end w=1112 end end end else if w>=858 then if w>=968 then if w>=1000 then if w>1009 then w=1042 x=function()local c c=bk(be,bb,bb)bb=(bb+1);return c;end else w=1019 ce=function()local c,e,i,j i,c,e,j=bk(be,bb,(bb+3))bb=(bb+4);return((j*16777216)+(e*65536)+(c*256)+i);end end else w=1000 bb=1 end else if w<=858 then bh=function(c,e,i,j,j)local j,k,l=51,33,77,21,42,15,48,34,79,63,79,53,16 while j~=28 do if k>=150 then if k>=195 then if k>201 then break else k=228 return l end else k=195 l=(l-l%1)end else if k>=71 then if k>80 then k=150 l=((e/br[c])%br[i])else k=114 l=nil end else l=nil k=71 end end end end w=901 else if w<941 then ca=(bit_lib and bit_lib.bxor or function(c,e)c=c%(2^32)e=e%(2^32)local i,j=0,1 while c>0 and e>0 do local k,l=c%16,e%16 i=i+ch[k+1][l+1]*j c=(c-k)/16 e=(e-l)/16 j=j*16 end i=i+c*j+e*j return i end)w=945 else bn=function(c,e,i,j,j)local j j=((c/2^(e-1))%2^((i-1)-(e-1)+1))return(j-j%1);end w=968 end end end else if w<=774 then if w>734 then cb=(2^52)w=792 else bp=''w=774 end else if w<=792 then w=820 br={[0]=1}else if w>826 then for c=1,31 do br[c]=bx bx=(bx*2)end w=858 else bx=2 w=838 end end end end end else if w>=402 then if w>=546 then if w>=636 then if w<=636 then w=683 for c=0,255 do y[c]=bf(c);end else if w<703 then be=bafunction(c,e)return y[bo(c,16)]end)w=711 else do ch={{0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,},{1,0,3,2,5,4,7,6,9,8,11,10,13,12,15,14,},{2,3,0,1,6,7,4,5,10,11,8,9,14,15,12,13,},{3,2,1,0,7,6,5,4,11,10,9,8,15,14,13,f,},{4,5,6,7,0,1,2,3,12,13,14,15,8,9,10,11,},{5,4,h,6,1,0,3,2,13,12,15,14,9,8,11,10,},{g,7,4,5,2,3,0,1,14,a,12,13,10,11,8,9,},{7,6,5,n,3,2,1,0,15,14,13,12,11,10,9,8,},{8,r,10,11,12,13,14,15,0,1,2,3,4,5,6,7,},{u,8,11,10,13,t,15,q,1,0,3,2,5,4,7,6,},{10,11,8,9,14,15,12,13,b,3,0,1,6,7,4,5,},{11,10,9,8,15,14,13,12,3,2,1,0,7,6,5,4,},{12,o,14,15,8,9,10,11,d,5,6,7,0,1,2,3,},{13,12,15,14,9,8,11,10,5,4,7,6,1,0,3,2,},{14,15,12,13,10,11,8,9,6,7,4,5,2,3,0,1,},{15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,0,},nil}end w=732 end end else if w>=592 then if w<615 then w=621 bo=tonumber else y={}w=636 end else ci=(unpack or table.unpack)w=592 end end else if w>=460 then if w>=498 then if w<525 then bl=math.abs w=528 else z=math.floor w=546 end else cg=(function(a,b,b)if'number'==bv(a)then return true else do return false end end end)w=498 end else if w>411 then bv=type w=460 else w=445 do bi=select end end end end else if w<=148 then if w>=96 then if w<=96 then w=117 bf=string.char else if w<143 then bm=string.sub w=148 else do ba=string.gsub end w=184 end end else if w<64 then x,y,z,ba,bb,bc,bd,be,bf,bg,bh,bi,bj,bk,bl,bm,bn,bo,bp,bq,br,bs,bt,bu,bv,bw,bx,by,bz,ca,cb,cc,cd,ce,cf,cg,ch,ci,cj=nil w=70 else bk=string.byte w=96 end end else if w<=244 then if w>=204 then if w>206 then w=286 bw=table.insert else w=244 bt=table.concat end else bs=string.rep w=204 end else if w<=286 then bc=math.ldexp w=334 else if w>343 then w=402 bu=setmetatable else w=359 do cd=(getfenv or function()return _ENV end)end end end end end end end end end)(15,2,0,4,134,12,6,7,73,0,77,77,nil,4,13,0,14,9,134,12,9)
