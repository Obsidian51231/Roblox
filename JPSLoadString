--[[
          ...                               .---:                                                                                             
         .%%%-                             *%%%#*                                                 :===                                        
         .%%%-    .::.  ... ...      ... .=%%%:.. ...     ..     .:.        .:..       .:.  ...  .=%%#..     ..:.      ...  .:                
         .%%%-  =#%%%%%*%%% -%%#    -%%#.*%%%%%%*.%%%.   *%%+ .*%%%%%+   -*%%%%%#=  :*%%%%%*%%%-.%%%%%%%: .+#%%%%%*-  :%%%:#%%:               
         .%%%- *%%#-::=#%%%  =%%*  .#%%: .=%%#....%%%.   *%%+ =%%#      *%%*-::=*=.:%%%=::-*%%%- .=%%#.. :%%%=::-#%%+ :%%%#+--                
         .%%%-.%%%:    :%%%   *%%= *%%-   -%%#   .%%%.   *%%+  +#%%#*- .%%%.       +%%+     #%%-  -%%#   *%%=    .%%%.:%%%:                   
    :=: .=%%%. #%%+   .*%%%    #%%*%%=    -%%#   .%%%-  .#%%+      *%%+ #%%=   :-. =%%#:   -%%%-  -%%#   =%%#.   +%%# :%%%                    
   -%%%%%%%%-  .*%%%##%%%%%    .#%%%+     -%%#    +%%%##%#%%+ =%%#*#%%- .*%%%#%%%*. =%%%##%%%%%-  .#%%%#: =#%%%#%%%+. :%%%                    
     :====:      .-===:.---     =%%*      .---     .-==-.:--:  .-===-      -===-.     :===- ---.    -==-    :-===:    .---                    
                               :%%#.                                                                                                          
                               ===.                                                                                                           
--]]

-- Jayfuscator V1.2.1 --

return(function(a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,u,v,w,x,y,z,ba,bb,bc,bd,be,bf,bf,bf)local bf,bg,bh,bi,bj,bk,bl,bm,bn,bo,bp,bq,br,bs,bt,bu,bv,bw,bx,by,bz,ca,cb,cc,cd,ce,cf,cg,ch,ci,cj,ck,cl,cm,cn,co,cp,cq,cr,cs,ct=120,31,30,81,65,22,50,13,57,58,13,59,77,52,32,44,41,32,61,19,17,12,40,51,97,19,21,75,26,61,69,44,46,69,17,82,71,41,38,21,90,70,12,76,78,70,36,83,83,28,88 while bf~=80 do if bg>=757 then if bg>=1027 then if bg<=1137 then if bg<=1063 then if bg>1031 then bl=function()local cu,cv,cw,cx,cy,cz,da,db=70,63,27,98,17,21,43,29,96,17,95,47,54,68,14,55,22,65,78,45,76 while cu~=41 do if cv>=202 then if cv>=297 then if cv>=323 then if cv>330 then break else cv=367 return(da*(2^(cw-1023))*(cz/cr+cx))end else cv=323 if not(cw~=0)then if 0~=cz then cw=1 cx=i else do return(da*0)end end elseif 2047~=cw then else if 0==cz then do do return(da*(0/0))end end else return(da*(1/0))end end end else if cv<=202 then cv=247 cw=ct(20,cy,z)else if cv>253 then cx=1 cv=297 else cv=274 cz=(ct(0,cy,20)*4294967296+db)end end end else if cv<=79 then if cv<75 then cv=79 cw,cx,cy,cz,da,db=nil else cv=107 db=bo()end else if cv>=152 then if cv<169 then cv=171 while(db==0 and cy==0)do return 0 end else cv=202 da=((-1)^ct(31,cy,1))end else cv=152 cy=bo()end end end end end bg=1082 else do cg=function()local i,z i,z=bh(bq,bn,(bn+d))do bn=(bn+2);end return((z*j)+i);end end bg=1063 end else if bg<=1082 then bi=function(d,d)local d,i,j,z=45,32,76,46,27,28,93,58,57,56,50,78,76 while d~=35 do if i<=96 then if i<=32 then i=81 j,z=nil else if i>87 then i=134 j=bq:sub(bn,(bn+z-1))else i=96 z=bo()end end else if i<=134 then i=152 bn=(bn+z);else if i<178 then i=185 return j;else d=35;end end end end end bg=1098 else if bg<1134 then do cd=function(...)return{...},bv('#',...)end end bg=1137 else bg=1167 ca={}end end end else if bg>=1252 then if bg>=1273 then if bg>1280 then bf=80;else bg=1299 return bu(bt(cb()),{},cb())();end else bu=function(d,i,j,z,z)local z,bf,cu,cv,cw bf=d[170]cv=bx z=d[116]cu=d[72]cw=d[183]return function(...)local d,cv,cx,cy,cz,da,db,dc,dd do dd=1 end db=-1 do d=-1 end cv={}cx={...}cy=(bv('#',...)-1)cz={}do dc={}end do for d=0,cy do if(not(d<cw))then do cv[(d-cw)]=cx[(d+1)];end else dc[d]=cx[(d+1)];end;end;end da=(cy-cw+1)do while be do local d,be,da,de,df,dg,dh,di,dj,dk d=z[dd]dg=d[191]dh=d[163]be=d[154]da=d[38]do df=d[114]end do dj=d[55]end di=d[33]dk=d[111]de=d[86]if not(dg>44)then if not(d[191]>21)then do if not(dg>10)then if not(dg>4)then if not(d[191]<2)then if not(dg>2)then else if(dg>3)then dc[be]=(dc[dk]+dc[d[114]]);else if not dc[df]then dc[be]=dc[df];dd=dk;end;end end else if 0==d[191]then dc[be]=(dc[dk]/dc[df]);else local dh,dl dh=be dl=dc[dk]dc[(dh+1)]=dl;dc[dh]=dl[dc[d[114]]];end end else if not(d[191]<8)then if not(dg<9)then if not(dg~=9)then do dc[be]=(dc[d[111]]/cu[df]);end else dc[be]=j[cu[d[111]]][cu[df]];end else if((dc[d[154]]<dc[d[t]]))then dd=dk;end;end else do if not(d[191]>5)then dc[be]={};else if(dg>6)then do dc[d[f]]=j[cu[dk]];end else dc[de]();end end end end end else if not(dg>15)then if not(dg<13)then if not(dg<14)then if 14==dg then do dd=((dc[be]~=dc[d[114]])and dk or dd)end else dc[be]=(dc[dk]*cu[d[114]]);end else local f f={}if(#cz>0)then do for t=1,#cz do local dh dh=cz[t]do for t=0,#dh do local dl,dm,dn dl=dh[t]do dn=dl[1]end dm=dl[2]do if(dn==dc and dm>=0)then f[dm]=dn[dm]dl[1]=f end end end end end end end return d[da],d[be],dc[(be+2)];end else if(dg<12)then dc[be]=dc[dk][dc[df]];else bx[be]={}end end else if not(dg<19)then if not(dg>19)then dc[d[154]][dc[d[111]]]=dc[df];else do if(dg<21)then z[dd]={[114]=0,[154]=0,[191]=dg-13,[55]=0,[111]=1};dd=(dd-1);else local f,t,dh,dl,dm dl=be dm=d[114]t=(dl+2)dh={dc[dl](dc[dl+1],dc[t])}do for dn=1,dm do dc[(t+dn)]=dh[dn]end end f=dc[(dl+3)]if f then dc[t]=f else do dd=dk;end end;end end end else if not(dg>16)then local f,t f=be do t={}end for dh=1,#cz do local dl dl=cz[dh]for dh=0,#dl do local dm,dn,_do dm=dl[dh]dn=dm[1]_do=dm[2]do if(dn==dc and _do>=f)then t[_do]=dn[_do];dm[1]=t;end;end end;end;else if(dg<18)then local f f=be dc[f]=dc[f](dc[f+1]);else local f,t,dh,dl dh=be f=((df-1)*50)do dl=dc[dh]end t=dk for dm=1,t do dl[(f+dm)]=dc[(dh+dm)]end;end end end end end end else if not(dg<33)then do if not(dg>38)then if not(dg<36)then if not(dg<37)then if not(dg~=37)then local f,t t=be f=dc[d[111]]dc[(t+1)]=f;dc[t]=f[cu[df]];else do dc[be]=(dc[dk]^dc[df]);end end else j=dc[d[be]]end else if not(dg<34)then if(dg<35)then dc[be]=(dc[dk]-dc[d[114]]);elseif((dc[be]>dc[df]))then dd=dk;end else z[dd]=ca[dj];dd=dk;end end else do if not(dg>41)then do if not(dg>39)then dc[be]=cu[dk]else if(dg<41)then do dc[be][cu[dk]]=cu[df];end else dc[be]=(dc[dk]*dc[df]);end end end else if not(dg>42)then dc[be]=(dc[dk]+cu[df]);else if(dg>43)then dc[be]=nil;else dc[be]=(dc[dk]%cu[df]);end end end end end end else if not(dg>26)then if not(dg>23)then do if(dg>22)then cu=bx[be](cu)else local f f=dc[di][dj]dc[d[33]][dj]=(f..dc[df]);end end else if not(d[b]>24)then dc[d[154]]=bu(bf[dk],nil,j);else if(dg>25)then bx[d[154]]=dc[da]else do while(dc[be]~=dc[df])do dd=dk;break end end end end end else do if not(dg>29)then if not(dg<28)then if(dg<29)then do dc[be]=#dc[dk];end else local b b=d[154]do return cn(dc,b,(b+dk))end;end else do while(dc[d[154]]~=cu[df])do dd=dk;break end end end else if not(dg<31)then if(dg>31)then dc[d[154]]();else dc[be]=(dc[dk]%dc[df]);end else dc[d[154]]=dc[dk][cu[df]];end end end end end end else if not(dg>67)then if not(d[191]<56)then if not(d[191]<62)then if not(dg>64)then if not(dg>62)then dc[be]=dc[dk];else if 63==dg then local b,f,t t=be f=dc[t]b=dc[(t+2)]if((b>0))then if((f>dc[t+1]))then dd=dk;else dc[(t+3)]=f;end elseif((f<dc[t+1]))then dd=dk;else dc[(t+3)]=f;end else local b,f f,b=cd(...)do for b=1,be do dc[(b-1)]=f[b]end end end end else if not(dg>65)then do dc[be]=(0~=dk);end dd=(dd+1);else if not(dg~=66)then if dc[be]then do dd=dk;end end;else dc[be]=dc[dk]end end end else if not(dg<59)then if not(dg<60)then if 60==dg then else dc[be]=bx[d[38]]end else dc[d[154]]=-dc[dk];end else if not(dg>ba)then do dc[be]=(not dc[d[111]]);end else if(dg>57)then do dd=dk;end else local b,f,t do b=be end t={dc[b](cn(dc,b+1,dk))}f=0 for ba=b,df do f=(f+1);dc[ba]=t[f];end end end end end else if not(d[191]<50)then if not(dg>52)then do if not(dg>50)then dc[d[be]]=dc else if(dg>51)then local b b=d[154]do return dc[b](cn(dc,(b+1),dk))end;else local b b=be dc[b]=dc[b](cn(dc,b+1,d[111]));end end end else if not(dg<54)then do if not(d[191]~=54)then bx=dc else i[dk]=dc[be];end end else dc[de]=(function()dc[be]=bu(bf[da],nil,j);end)end end else if not(dg<47)then if not(d[191]<48)then if(dg>48)then if d[v]then be=false;df=dk;dd=(dd-1);else dd=(dd+dk+df);end else local b,f do b=be end do f={}end if(#cz>0)then for t=1,#cz do local v v=cz[t]for t=0,#v do local ba,dh,di dh=v[t]ba=dh[1]do di=dh[2]end if(ba==dc and di>=0)then f[di]=ba[di]dh[1]=f end end end end return cn(dc,b,db);end else do j[cu[d[111]]]=dc[be];end end else if(dg<46)then do do return dc[d[33]][dj]end end else for b=be,dk do do dc[b]=nil;end end;end end end end else if not(dg<79)then if not(dg<85)then do if not(dg<88)then do if not(d[191]<89)then if 89==dg then dd=((cu[be]<dc[df])and dk or dd)else local b,f do f=be end b=dk for t=f,b do do dc[t]=cv[(t-f)];end end;end else dd=((dc[be]<dc[df])and dk or dd)end end else if not(dg>85)then local b b=be dc[b]=dc[b](cn(dc,b+1,db));else do if(d[191]>86)then local b,f,t t=be do f=dc[(t+2)]end do b=(dc[t]+f)end do dc[t]=b;end if((f>0))then if(not(b>dc[t+1]))then dd=dk;dc[(t+3)]=b;end elseif(not(b<dc[t+1]))then dd=dk;dc[(t+3)]=b;end else dc[be]=bx[da]end end end end end else if not(dg>81)then if not(dg<80)then if not(dg~=80)then do z[dd]=ca[dj];end dd=dk;else local b,f b=d[154]f={}do if(#cz>0)then for t=1,#cz do local v v=cz[t]for t=0,#v do local z,ba,cv z=v[t]cv=z[1]do ba=z[2]end while cv==dc and ba>=0 do f[ba]=cv[ba]z[1]=f break end end end end end return dc[b],dc[(b+1)]end else local b,f,t,v f=be v={dc[f]()}do t=df end b=0 for z=f,t do b=(b+1);dc[z]=v[b];end end else if not(dg<83)then if(dg<84)then bx[d[154]]=bx[da]else local b,f b=dk f=dc[b]for t=(b+1),df do f=(f..dc[t]);end;dc[d[154]]=f;end else do do do return dc[be]end end end end end end else if not(dg<73)then if not(d[191]<76)then if not(dg<77)then if(dg<78)then do dd=((cu[be]~=cu[df])and dk or dd)end else while(dc[d[154]]>=dc[df])do dd=dk;break end end else do dc[be]=i[dk];end end else if not(d[191]>73)then if not dc[be]then dd=dk;end;else do if(dg<75)then dc={};for b=0,cy do do if(b<cw)then dc[b]=cx[(b+1)];else break end;end end;else db=d[d[154]];end end end end else if not(dg<70)then if not(dg>70)then else if(dg>71)then do if((cu[be]<dc[df]))then do dd=dk;end end;end else local b,f,i,t f=be i,t=cd(dc[f](cn(dc,(f+1),dk)))do db=(t+f-1)end b=0 do for t=f,db do b=(b+1);dc[t]=i[b];end;end end end else if(dg>68)then dc[de]=(function()do dc[be]=bu(bf[da],nil,j);end end)else bx[d[154]]()end end end end end end dd=(dd+1);end;end end;end bg=1273 end else if bg>=1192 then if bg<1223 then do bx={}end bg=1228 else bp={}bg=1252 end else bg=1192 bt=function(b,d,d)local d,f,i,j,t,v,z,ba=86,35,12,33,48,73,44,80,88,49,22,49,29,46,99,24,29,69,22,38,15,97,83,24,77 while d~=45 do if f>=340 then if f<=442 then if f>=412 then if f>420 then v[72]=z f=491 else f=442 for be=1,i do local bf,cu,cv,cw=63,41,66,96,64,22,73,53,35,27,79,85,60,27 while bf~=35 do if cu>=163 then if cu>=188 then if cu<229 then cu=232 z[be]=cv;else bf=35;end else if(2==cw)then cv=(0~=bj());elseif(4==cw)then cv=bl();elseif(1==cw)then cv=bi();elseif(not(cw~=3))then cv=b[bi()];end;cu=188 end else if cu<=41 then cv,cw=nil cu=80 else if cu<119 then cu=128 cw=bj()else cv=nil cu=163 end end end end end end else if f<384 then f=388 i=bo()else do z={}end f=412 end end else if f>=541 then if f<=541 then f=574 v[y]=bj();else if f>576 then d=45;else f=620 return v;end end else if f<517 then for b=1,bo()do local d,y,be,bf,cu,cv=99,45,51,75,75,67,97,65,59,68,78,37,77,36,99,52,77,19,69,13,73,63,67,61,68 while d~=56 do if y<=282 then if y<=127 then if y<=60 then if y>54 then y=92 be={{},nil,nil,nil,nil}else be,bf,cu,cv=nil y=60 end else if y<119 then y=127 be[163]=bj();else be[69]={};y=175 end end else if y<=192 then if y<184 then if 1==bj()then for d=1,bj()do be[69][d]={bj()==0,bo()}end end y=192 else bf=bo()y=208 end else if y<=208 then cu=bo()y=238 else if y>243 then y=313 be[27]=cv else cv=br(bf,1,2)y=282 end end end end else if y<=396 then if y>=352 then if y>356 then y=423 be[114]=br(bf,21,29);else be[111]=br(cu,12,33);y=396 end else if y>315 then y=352 do be[154]=br(bf,3,11);end else be[191]=br(cu,1,p);y=335 end end else if y>=490 then if y<=490 then y=528 be[86]=-be[114]else if y<568 then y=576 ba[b]=be;else break end end else if y>426 then y=490 be[33]=-be[154]else y=449 do be[55]=br(bf,12,20);end end end end end end end f=522 else f=541 v[116]=ba;end end end else if f<=129 then if f>=91 then if f>95 then v={}f=158 else f=129 do j={}end end else if f<49 then i,j,t,v,z,ba=nil f=57 else f=91 ba={}end end else if f>=244 then if f<290 then f=293 for b=1,bo()do j[b-1]=bt();end else f=340 v[170]=j;end else if f<195 then f=201 t=bo()else for b=(#ca+1),(#ca+t)do local d,i,j,p,t=82,45,91,36,54,96,82,29,79,66,18,40,24,50,52,91,47,64,46,86,29,70,51,64 while d~=49 do if i<=268 then if i<=110 then if i<=65 then if i>50 then i=93 j={}else i=65 j,p,t=nil end else if i<104 then i=110 j[163]=bj();else i=141 p=bo()end end else if i>=221 then if i<265 then i=268 j[27]=br(p,1,2);else i=315 do j[191]=br(t,1,11);end end else if i<167 then i=173 t=bo()else i=221 j[55]=bj();end end end else if i>=417 then if i<=439 then if i>423 then i=486 j[86]=-j[114]else i=439 do j[33]=-j[154]end end else if i>490 then d=49;else i=519 ca[b]=j;end end else if i<=336 then if i<331 then i=336 do j[154]=br(p,3,11);end else i=364 j[38]=br(p,12,20);end else if i>373 then i=417 j[111]=br(t,12,33);else i=399 j[114]=br(p,21,29);end end end end end end f=244 end end end end end end end end end else if bg<=827 then if bg<=774 then if bg<768 then bk=''bg=774 else bg=789 cr=(2^x)end else if bg<=789 then bm={[0]=1}bg=806 else if bg<818 then ch=2 bg=827 else bg=869 for b=1,31 do bm[b]=ch ch=(ch*2)end end end end else if bg>=944 then if bg>=973 then if bg<991 then bg=999 bo=function()local b,d,f,i do i,f,b,d=bh(bq,bn,(bn+bc))end bn=(bn+4);return((d*16777216)+(b*65536)+(f*256)+i);end else bj=function()local b b=bh(bq,bn,bn)do bn=(bn+1);end return b;end bg=1027 end else bg=973 bn=1 end else if bg>=891 then if bg<924 then cq=(bit_lib and bit_lib.bxor or function(b,d)b=b%(2^32)d=d%(2^32)local f,i=0,1 while b>0 and d>0 do local j,p=b%16,d%16 f=f+cf[j+1][p+1]*i b=(b-j)/16 d=(d-p)/16 i=i*16 end f=f+b*i+d*i return f end)bg=926 else bg=944 br=function(b,d,f,i,i,i,i)local i i=((b/2^(d-1))%2^((f-1)-(d-1)+1))return(i-i%1);end end else bg=891 ct=function(b,d,f,i,i,i)local i,j,p=70,34,91,94,79,29,38,14,97,51,28,27 while i~=41 do if j>=160 then if j>=188 then if j>191 then break else j=231 return p end else j=188 p=(p-p%1)end else if j<=34 then p=nil j=82 else if j<120 then j=126 do p=nil end else p=((d/bm[b])%bm[f])j=160 end end end end end end end end end else if bg>=358 then if bg>=548 then if bg<=607 then if bg>=572 then if bg<601 then bg=607 do ce=tonumber end else do by={}end bg=651 end else bg=572 cn=(unpack or table.unpack)end else if bg<=651 then do for b=0,255 do do by[b]=cj(b);end end end bg=688 else if bg<703 then bg=709 bq=cpfunction(b,d,d)return by[ce(b,16)]end)else bg=757 cf={{0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,},{1,0,3,2,5,4,7,6,9,8,11,10,13,12,bb,14,},{2,g,0,1,6,7,4,5,10,11,8,9,14,15,12,13,},{3,2,1,0,7,6,5,4,11,10,9,8,15,14,13,12,},{k,5,6,7,0,1,2,3,12,13,14,15,8,q,10,11,},{5,4,7,6,1,0,3,2,13,12,15,14,9,8,11,h,},{6,7,n,5,2,3,0,1,14,m,12,13,10,11,8,9,},{7,6,5,4,3,2,1,l,15,14,13,12,11,10,9,8,},{8,9,10,11,12,13,14,15,bd,1,2,3,4,5,6,7,},{9,8,11,10,13,12,15,14,1,0,3,2,5,4,7,6,},{10,11,8,9,14,15,12,13,2,3,0,s,6,7,4,5,},{11,10,9,w,15,14,13,12,3,2,1,0,7,6,5,4,},{12,13,14,15,8,9,r,11,4,5,6,7,0,1,2,3,},{13,12,15,14,9,8,11,10,5,4,7,c,1,0,3,2,},{14,15,12,13,u,11,8,9,6,o,4,5,2,3,0,1,},{15,14,13,12,11,10,9,8,7,6,5,4,3,a,e,0,},nil}end end end else if bg>=426 then if bg>=468 then if bg<501 then cc=math.abs bg=507 else ci=math.floor bg=548 end else bg=468 bs=(function(a,b)if'number'==bw(a)then return true else return false end end)end else if bg>367 then bw=type bg=426 else bv=select bg=395 end end end else if bg<=107 then if bg>=68 then if bg>=86 then if bg<104 then bg=107 do bz=string.sub end else cp=string.gsub bg=135 end else cj=string.char bg=86 end else if bg>36 then bh=string.byte bg=68 else bg=48 bh,bi,bj,bk,bl,bm,bn,bo,bp,bq,br,bs,bt,bu,bv,bw,bx,by,bz,ca,cb,cc,cd,ce,cf,cg,ch,ci,cj,ck,cl,cm,cn,co,cp,cq,cr,cs,ct=nil end end else if bg>=246 then if bg>=276 then if bg<318 then bg=323 cb=(getfenv or function()return _ENV end)else cl=setmetatable bg=358 end else co=math.ldexp bg=276 end else if bg>=168 then if bg<209 then ck=table.concat bg=216 else cm=table.insert bg=246 end else cs=string.rep bg=168 end end end end end end end)(2,191,6,2,1,154,3,10,0,256,4,0,15,4,7,11,9,10,1,114,10,154,8,52,183,11,56,15,3,0,true)
